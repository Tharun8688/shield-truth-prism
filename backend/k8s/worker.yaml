apiVersion: apps/v1
kind: Deployment
metadata:
  name: pi-shield-worker
  namespace: pi-shield
spec:
  replicas: 5
  selector:
    matchLabels:
      app: pi-shield-worker
  template:
    metadata:
      labels:
        app: pi-shield-worker
    spec:
      containers:
      - name: worker
        image: gcr.io/PROJECT_ID/pi-shield-worker:latest
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: pi-shield-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: pi-shield-config
              key: REDIS_URL
        - name: GCS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: pi-shield-config
              key: GCS_BUCKET
        - name: MAX_VIDEO_DURATION
          valueFrom:
            configMapKeyRef:
              name: pi-shield-config
              key: MAX_VIDEO_DURATION
        - name: FRAME_SAMPLE_RATE
          valueFrom:
            configMapKeyRef:
              name: pi-shield-config
              key: FRAME_SAMPLE_RATE
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/gcp/credentials.json
        - name: WORKER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: gcp-credentials
          mountPath: /etc/gcp
          readOnly: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import redis; r=redis.from_url('redis://redis-service:6379/0'); r.ping()"
          initialDelaySeconds: 30
          periodSeconds: 60
      volumes:
      - name: gcp-credentials
        secret:
          secretName: pi-shield-secrets
          items:
          - key: GCP_CREDENTIALS
            path: credentials.json

---
# GPU-enabled worker deployment for heavy ML inference
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pi-shield-worker-gpu
  namespace: pi-shield
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pi-shield-worker-gpu
  template:
    metadata:
      labels:
        app: pi-shield-worker-gpu
    spec:
      nodeSelector:
        accelerator: nvidia-tesla-t4
      containers:
      - name: worker
        image: gcr.io/PROJECT_ID/pi-shield-worker:latest
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: pi-shield-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: pi-shield-config
              key: REDIS_URL
        - name: GCS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: pi-shield-config
              key: GCS_BUCKET
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/gcp/credentials.json
        - name: WORKER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: WORKER_TYPE
          value: "gpu"
        volumeMounts:
        - name: gcp-credentials
          mountPath: /etc/gcp
          readOnly: true
        resources:
          requests:
            memory: "1Gi"
            cpu: "1000m"
            nvidia.com/gpu: 1
          limits:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
      volumes:
      - name: gcp-credentials
        secret:
          secretName: pi-shield-secrets
          items:
          - key: GCP_CREDENTIALS
            path: credentials.json